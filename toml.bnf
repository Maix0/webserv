/* converted on Mon Feb 24, 2025, 17:16 (UTC+01) by w3c-to-w3c v0.69 which is Copyright (c) 2011-2025 by Gunther Rademacher <grd@gmx.net> */

toml				::= expression ( newline expression )*
expression			::= ws ( ( keyval | table ) ws )? comment?
ws					::= (' ' | '\t')*
newline				::= '\n' | '\r\n'
non-eol				::= '\t' | PRINTABLE
comment				::= '#' non-eol*
keyval				::= key keyval-sep val
key					::= simple-key | dotted-key
simple-key			::= quoted-key | unquoted-key
unquoted-key		::= ( ALPHA | DIGIT | '-' | '_' )+
quoted-key			::= basic-string | literal-string
dotted-key			::= simple-key ( dot-sep simple-key )+
dot-sep				::= ws '.' ws
keyval-sep			::= ws '=' ws
val					::= string | boolean | array | inline-table | float | integer
string				::= basic-string literal-string
basic-string		::= '"' basic-char* '"'
basic-char			::= basic-unescaped | escaped
basic-unescaped		::= wschar | '[' | '!' | [#x23-#x5C] | [#x20-#x7e]
escaped				::= BACKSLASH escape-seq-char
escape-seq-char		::= '"' | BACKSLASH | 'b' | 'f' | 'n' | 'r' | 't' | ('u' HEXDIG4 ) | ('U' HEXDIG8)
literal-string		::= "'" literal-char* "'"
literal-char		::= '\t' | PRINTABLE
integer				::= dec-int | hex-int | oct-int | bin-int
digit1-9			::= [1-9]
digit0-7			::= [0-7]
digit0-1			::= [0-1]
dec-int				::= ( '+' | '-' )? unsigned-dec-int
unsigned-dec-int	::= DIGIT | digit1-9 ( '_'? DIGIT )+
hex-int				::= '0x' HEXDIG ( '_'? HEXDIG )*
oct-int				::= '0o' digit0-7 ( '_'? digit0-7 )*
bin-int				::= '0b' digit0-1 ( '_'? digit0-1 )*
float				::= float-int-part ( exp | frac exp? ) | special-float
float-int-part		::= dec-int
frac				::= '.' zero-prefixable-int
zero-prefixable-int	::= DIGIT ( '_'? DIGIT )*
exp					::= 'e' float-exp-part
float-exp-part		::= ( '+' | '-' )? zero-prefixable-int
special-float		::= ( '+' | '-' )? ( 'inf' | 'nan' )
array				::= '[' ws-comment-newline ( val ws-comment-newline ( ',' ws-comment-newline val ws-comment-newline )* ','? ws-comment-newline )? ']'
ws-comment-newline	::= ( wschar | comment? newline )*
table				::= std-table | array-table
std-table			::= std-table-open key std-table-close
std-table-open		::= '[' ws
std-table-close		::= ws ']'
inline-table		::= inline-table-open ( keyval ( inline-table-sep keyval )* )? inline-table-close
inline-table-open	::= '{' ws
inline-table-close	::= ws '}'
inline-table-sep	::= ws ',' ws
array-table			::= array-table-open key array-table-close
array-table-open	::= '[[' ws
array-table-close	::= ws ']]'

BACKSLASH			::= "#x5C"
PRINTABLE			::= [#x20-#x7E]
ALPHA				::= [a-z] | [A-Z]
DIGIT				::= [0-9]
HEXDIG				::= [a-f] | [A-F] | [0-9]
HEXDIG4				::= HEXDIG HEXDIG HEXDIG HEXDIG
HEXDIG8				::= HEXDIG4 HEXDIG4

